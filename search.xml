<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>事件分发机制(起点、终点)、事件处理机制</title>
      <link href="/2023/05/18/shi-jian-fen-fa-ji-zhi-qi-dian-zhong-dian-shi-jian-chu-li-ji-zhi/"/>
      <url>/2023/05/18/shi-jian-fen-fa-ji-zhi-qi-dian-zhong-dian-shi-jian-chu-li-ji-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="事件分发和事件处理"><a href="#事件分发和事件处理" class="headerlink" title="事件分发和事件处理"></a>事件分发和事件处理</h1><hr><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token number">1.</span>View<span class="token punctuation">.</span><span class="token function">dispatchTouchEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    事件处理，由具体的控件进行处理，比如<span class="token class-name">TextView</span>，<span class="token class-name">ImageView</span>等    <span class="token number">2.</span> <span class="token class-name">ViewGroup</span><span class="token punctuation">.</span><span class="token function">dispatchTouchEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    事件分发，属于容器对象，比如<span class="token class-name">LinearLayout</span>，<span class="token class-name">ConstraintLayout</span>等<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="事件分发的起点及流程"><a href="#事件分发的起点及流程" class="headerlink" title="事件分发的起点及流程"></a>事件分发的起点及流程</h1><hr><ol><li><p>起点</p><blockquote><p>ViewRootImpl创建事件接收者对象</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">ViewRootImpl</span><span class="token punctuation">.</span>java<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setView</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">,</span> <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span> attrs<span class="token punctuation">,</span> <span class="token class-name">View</span> panelParentView<span class="token punctuation">,</span>            <span class="token keyword">int</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>            <span class="token comment">//事件接收器，由内部的 onInputEvent(InputEvent event) 接收并处理事件</span>    mInputEventReceiver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WindowInputEventReceiver</span><span class="token punctuation">(</span>inputChannel<span class="token punctuation">,</span>                            <span class="token class-name">Looper</span><span class="token punctuation">.</span><span class="token function">myLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                     <span class="token comment">// Set up the input pipeline.</span>    <span class="token class-name">CharSequence</span> counterSuffix <span class="token operator">=</span> attrs<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    mSyntheticInputStage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SyntheticInputStage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//后续使用一般看ViewPostImeInputStage就行，实现View的事件分发</span>    <span class="token comment">//将post-ime的input event派发给view hierarchy处理</span>    <span class="token class-name">InputStage</span> viewPostImeStage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ViewPostImeInputStage</span><span class="token punctuation">(</span>mSyntheticInputStage<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">InputStage</span> nativePostImeStage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NativePostImeInputStage</span><span class="token punctuation">(</span>viewPostImeStage<span class="token punctuation">,</span>            <span class="token string">"aq:native-post-ime:"</span> <span class="token operator">+</span> counterSuffix<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">InputStage</span> earlyPostImeStage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EarlyPostImeInputStage</span><span class="token punctuation">(</span>nativePostImeStage<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">InputStage</span> imeStage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImeInputStage</span><span class="token punctuation">(</span>earlyPostImeStage<span class="token punctuation">,</span>            <span class="token string">"aq:ime:"</span> <span class="token operator">+</span> counterSuffix<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">InputStage</span> viewPreImeStage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ViewPreImeInputStage</span><span class="token punctuation">(</span>imeStage<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">InputStage</span> nativePreImeStage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NativePreImeInputStage</span><span class="token punctuation">(</span>viewPreImeStage<span class="token punctuation">,</span>            <span class="token string">"aq:native-pre-ime:"</span> <span class="token operator">+</span> counterSuffix<span class="token punctuation">)</span><span class="token punctuation">;</span>    mFirstInputStage <span class="token operator">=</span> nativePreImeStage<span class="token punctuation">;</span>    mFirstPostImeInputStage <span class="token operator">=</span> earlyPostImeStage<span class="token punctuation">;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>这些stage分成三类：    输入法之前的<span class="token function">stage</span><span class="token punctuation">(</span>pre<span class="token operator">-</span>ime stage<span class="token punctuation">)</span>    输入法<span class="token function">stage</span><span class="token punctuation">(</span>ime stage<span class="token punctuation">)</span>    输入法之后的<span class="token function">stage</span><span class="token punctuation">(</span>post<span class="token operator">-</span>ime stage<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>ViewRootImpl.WindowInputEventReceiver.onInputEvent()</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//enqueueInputEvent,把事件添加进队列</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">if</span> <span class="token punctuation">(</span>processedEvents <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>processedEvents<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// InputEvent consumed by mInputCompatProcessor</span>        <span class="token function">finishInputEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> processedEvents<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">enqueueInputEvent</span><span class="token punctuation">(</span>                    processedEvents<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span>                    <span class="token class-name">QueuedInputEvent</span><span class="token punctuation">.</span><span class="token constant">FLAG_MODIFIED_FOR_COMPATIBILITY</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token function">enqueueInputEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">if</span> <span class="token punctuation">(</span>processImmediately<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// processImmediately为true</span>    <span class="token function">doProcessInputEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token function">scheduleProcessInputEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>ViewRootImpl.doProcessInputEvents()</p><p>从事件队列中依次取出事件（先进先出），调用 deliverInputEvent(q);</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">doProcessInputEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// Deliver all pending input events in the queue.</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>mPendingInputEventHead <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">QueuedInputEvent</span> q <span class="token operator">=</span> mPendingInputEventHead<span class="token punctuation">;</span>        mPendingInputEventHead <span class="token operator">=</span> q<span class="token punctuation">.</span>mNext<span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>        <span class="token function">deliverInputEvent</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>ViewRootImpl.deliverInputEvent()</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token class-name">InputStage</span> stage<span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>q<span class="token punctuation">.</span><span class="token function">shouldSendToSynthesizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    stage <span class="token operator">=</span> mSyntheticInputStage<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    stage <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">shouldSkipIme</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> mFirstPostImeInputStage <span class="token operator">:</span> mFirstInputStage<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">if</span> <span class="token punctuation">(</span>stage <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">handleWindowFocusChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    stage<span class="token punctuation">.</span><span class="token function">deliver</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token function">finishInputEvent</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>InputStage.deliver(QueuedInputEvent q) -&gt; ViewPostImeInputStage.deliver(QueuedInputEvent q)</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">deliver</span><span class="token punctuation">(</span><span class="token class-name">QueuedInputEvent</span> q<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>q<span class="token punctuation">.</span>mFlags <span class="token operator">&amp;</span> <span class="token class-name">QueuedInputEvent</span><span class="token punctuation">.</span><span class="token constant">FLAG_FINISHED</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">forward</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//事件被处理过，进入下一阶段</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">shouldDropInputEvent</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">finish</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token function">traceEvent</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span> <span class="token class-name">Trace</span><span class="token punctuation">.</span><span class="token constant">TRACE_TAG_VIEW</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">final</span> <span class="token keyword">int</span> result<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment">//调用ViewPostImeInputStage.onProcess</span>            result <span class="token operator">=</span> <span class="token function">onProcess</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token class-name">Trace</span><span class="token punctuation">.</span><span class="token function">traceEnd</span><span class="token punctuation">(</span><span class="token class-name">Trace</span><span class="token punctuation">.</span><span class="token constant">TRACE_TAG_VIEW</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token function">apply</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>ViewPostImeInputStage.onProcess(QueuedInputEvent q)</p><p>InputEvent</p><p>​–&gt; KeyEvent</p><p>​–&gt; MotionEvent</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span> <span class="token keyword">int</span> <span class="token function">onProcess</span><span class="token punctuation">(</span><span class="token class-name">QueuedInputEvent</span> q<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>q<span class="token punctuation">.</span>mEvent <span class="token keyword">instanceof</span> <span class="token class-name">KeyEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">processKeyEvent</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">final</span> <span class="token keyword">int</span> source <span class="token operator">=</span> q<span class="token punctuation">.</span>mEvent<span class="token punctuation">.</span><span class="token function">getSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//SOURCE_CLASS_POINTER = 0x00000002</span>        <span class="token comment">//SOURCE_TOUCHSCREEN = 0x00001000 | SOURCE_CLASS_POINTER = 0x00001000 | 0x00000002</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>source <span class="token operator">&amp;</span> <span class="token class-name">InputDevice</span><span class="token punctuation">.</span><span class="token constant">SOURCE_CLASS_POINTER</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token function">processPointerEvent</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>source <span class="token operator">&amp;</span> <span class="token class-name">InputDevice</span><span class="token punctuation">.</span><span class="token constant">SOURCE_CLASS_TRACKBALL</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token function">processTrackballEvent</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token function">processGenericMotionEvent</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>ViewRootImpl.processPointerEvent(q)</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//调用decorView的方法，实际调用了View.dispatchPointerEvent()</span><span class="token keyword">boolean</span> handled <span class="token operator">=</span> mView<span class="token punctuation">.</span><span class="token function">dispatchPointerEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>View.dispatchPointerEvent()</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@UnsupportedAppUsage</span><span class="token punctuation">(</span>maxTargetSdk <span class="token operator">=</span> <span class="token class-name">Build<span class="token punctuation">.</span>VERSION_CODES<span class="token punctuation">.</span>R</span><span class="token punctuation">,</span> trackingBug <span class="token operator">=</span> <span class="token number">170729553</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">dispatchPointerEvent</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">isTouchEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">dispatchTouchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//触摸事件，调用DecorView的dispatchTouchEvent，DecorView重写了dispatchPointerEvent</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">dispatchGenericMotionEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>DecorView.dispatchTouchEvent()</p><p>mWindow.getCallback() 返回的就是Activity，Activity继承了Window.Callback，</p><p>所以接下来调用Activity.dispatchTouchEvent()</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">dispatchTouchEvent</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> ev<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">final</span> <span class="token class-name">Window<span class="token punctuation">.</span>Callback</span> cb <span class="token operator">=</span> mWindow<span class="token punctuation">.</span><span class="token function">getCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> cb <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mWindow<span class="token punctuation">.</span><span class="token function">isDestroyed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> mFeatureId <span class="token operator">&lt;</span> <span class="token number">0</span>            <span class="token operator">?</span> cb<span class="token punctuation">.</span><span class="token function">dispatchTouchEvent</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">dispatchTouchEvent</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>Activity.dispatchTouchEvent()</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">dispatchTouchEvent</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> ev<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>ev<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span><span class="token constant">ACTION_DOWN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//Activity对外提供的钩子方法，也相当于Activity本身对ACTION_DOWN事件的处理，但是不消费事件，即不影响事件传递</span>        <span class="token function">onUserInteraction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>    <span class="token comment">//PhoneWindow.superDispatchTouchEvent()</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">superDispatchTouchEvent</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//onTouchEvent，相当于事件处理，Activity本身对ev的处理</span>    <span class="token keyword">return</span> <span class="token function">onTouchEvent</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>getWindow().superDispatchTouchEvent(ev) -&gt; PhoneWindow.superDispatchTouchEvent()</p><p>又回到了Decoview</p><p>DeorView又调用了super.dispatchTouchEvent(event)，即调用了ViewGroup.dispatchTouchEvent()</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">superDispatchTouchEvent</span><span class="token punctuation">(</span><span class="token class-name">MotionEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> mDecor<span class="token punctuation">.</span><span class="token function">superDispatchTouchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h1 id="真正的事件分发-ViewGroup-dispatchTouchEvent"><a href="#真正的事件分发-ViewGroup-dispatchTouchEvent" class="headerlink" title="真正的事件分发 ViewGroup.dispatchTouchEvent"></a>真正的事件分发 ViewGroup.dispatchTouchEvent</h1><hr><p>在ViewGroup中，dispatchTouchEvent 只是对事件进行分发，并没有消费事件。不同的ViewGroup对dispatchTouchEvent的处理不同，这里只分析ViewGroup的。</p><p>事件处理机制的几个重要方法：</p><blockquote><ul><li><p>dispatchTouchEvent:</p><p>如果Event能够派发到View，那么它的dispatchTouchEvent方法必然会被调用。返回结果受当前View的onTouchEvent方法和子View的dispatchTouchEvnet方法影响，表示是否消耗当前事件。</p></li><li><p>onInterceptTouchEvent:<br>此方法是ViewGroup中定义的方法，在dispatchTouchEvent方法内部调用，用于判断当前View是否拦截事件。如果拦截，那么在这个事件序列中，此方法不会再被调用。返回结果表示是否拦截当前事件。</p></li><li><p>onTouchEvent:<br>在dispatchTouchEvent方法中调用，返回结果表示是否消耗当前事件; 如果不消耗，那么事件就会交给它的父View处理，在同一事件序列中，当前View无法再次接收事件。</p></li></ul><p>原文链接：<a href="https://blog.csdn.net/Dylan_Sen/article/details/84328284">https://blog.csdn.net/Dylan_Sen/article/details/84328284</a></p></blockquote><blockquote><p>onInterceptTouchEvent只要返回false，接下来的事件序列都将首先在onInterceptTouchEvent传递</p><p>onInterceptTouchEvent返回true，接下来的事件都不会在onInterceptTouchEvent出现</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// Check for interception.</span><span class="token keyword">final</span> <span class="token keyword">boolean</span> intercepted<span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>actionMasked <span class="token operator">==</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span><span class="token constant">ACTION_DOWN</span>        <span class="token operator">||</span> mFirstTouchTarget <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">final</span> <span class="token keyword">boolean</span> disallowIntercept <span class="token operator">=</span> <span class="token punctuation">(</span>mGroupFlags <span class="token operator">&amp;</span> <span class="token constant">FLAG_DISALLOW_INTERCEPT</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>disallowIntercept<span class="token punctuation">)</span> <span class="token punctuation">{</span>        intercepted <span class="token operator">=</span> <span class="token function">onInterceptTouchEvent</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span>        ev<span class="token punctuation">.</span><span class="token function">setAction</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// restore action in case it was changed</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        intercepted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token comment">// There are no touch targets and this action is not an initial down</span>    <span class="token comment">// so this view group continues to intercept touches.</span>    intercepted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>如果事件没有被取消，并且没有被拦截，才会分发到子View</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>canceled <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>intercepted<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> childrenCount <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">final</span> <span class="token keyword">int</span> childIndex <span class="token operator">=</span> <span class="token function">getAndVerifyPreorderedIndex</span><span class="token punctuation">(</span>childrenCount<span class="token punctuation">,</span> i<span class="token punctuation">,</span> customOrder<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">final</span> <span class="token class-name">View</span> child <span class="token operator">=</span> <span class="token function">getAndVerifyPreorderedView</span><span class="token punctuation">(</span>preorderedList<span class="token punctuation">,</span> children<span class="token punctuation">,</span> childIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>       <span class="token comment">//dispatchTransformedTouchEvent，将事件分发给子View</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">dispatchTransformedTouchEvent</span><span class="token punctuation">(</span>ev<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> child<span class="token punctuation">,</span> idBitsToAssign<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// Child wants to receive touch within its bounds.</span>           <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>        <span class="token punctuation">}</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="事件处理机制-View-dispatchTouchEvent"><a href="#事件处理机制-View-dispatchTouchEvent" class="headerlink" title="事件处理机制 View.dispatchTouchEvent"></a>事件处理机制 View.dispatchTouchEvent</h1><hr><h2 id="View-dispatchTouchEvent"><a href="#View-dispatchTouchEvent" class="headerlink" title="View.dispatchTouchEvent"></a>View.dispatchTouchEvent</h2><blockquote><p>ListenerInfo：保存事件监听器，如OnClickListener，OnTouchListener，OnLongClickListener等</p><p>这些监听器通过代码设置，如：</p><p>​view.setOnClickListener()</p><p>​view.setOnTouchListener()</p><p>如果mOnTouchListener不为空，则调用mOnTouchListener.onTouch(this, event)</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">onFilterTouchEventForSecurity</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mViewFlags <span class="token operator">&amp;</span> <span class="token constant">ENABLED_MASK</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">ENABLED</span> <span class="token operator">&amp;&amp;</span> <span class="token function">handleScrollBarDragging</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        result <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//noinspection SimplifiableIfStatement</span>    <span class="token class-name">ListenerInfo</span> li <span class="token operator">=</span> mListenerInfo<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>li <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> li<span class="token punctuation">.</span>mOnTouchListener <span class="token operator">!=</span> <span class="token keyword">null</span>            <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>mViewFlags <span class="token operator">&amp;</span> <span class="token constant">ENABLED_MASK</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">ENABLED</span>            <span class="token operator">&amp;&amp;</span> li<span class="token punctuation">.</span>mOnTouchListener<span class="token punctuation">.</span><span class="token function">onTouch</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        result <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">//如果onTouch消费了事件，即onTouch返回true，那么onTouchEvent就不会被调用</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result <span class="token operator">&amp;&amp;</span> <span class="token function">onTouchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        result <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="View-onTouchEvent"><a href="#View-onTouchEvent" class="headerlink" title="View.onTouchEvent"></a>View.onTouchEvent</h2><ol><li>ACTION_DOWN</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">case</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span><span class="token constant">ACTION_DOWN</span><span class="token operator">:</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">InputDevice</span><span class="token punctuation">.</span><span class="token constant">SOURCE_TOUCHSCREEN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        mPrivateFlags3 <span class="token operator">|=</span> <span class="token constant">PFLAG3_FINGER_DOWN</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token comment">//刚按下时，长按标志改为false</span>    mHasPerformedLongPress <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>clickable<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//往消息队列发送一个延时为ViewConfiguration.getLongPressTimeout()的消息</span>        <span class="token comment">//当延时到之后决定是否出发长按事件</span>        <span class="token function">checkForLongClick</span><span class="token punctuation">(</span>                <span class="token class-name">ViewConfiguration</span><span class="token punctuation">.</span><span class="token function">getLongPressTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                x<span class="token punctuation">,</span>                y<span class="token punctuation">,</span>                <span class="token constant">TOUCH_GESTURE_CLASSIFIED__CLASSIFICATION__LONG_PRESS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">performButtonActionOnTouchDown</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// Walk up the hierarchy to determine if we're inside a scrolling container.</span><span class="token comment">//是否在可滚动的容器内，如ListView，如果为ture，那么tap事件将会延时发送到可滚动容器的子View中</span>    <span class="token keyword">boolean</span> isInScrollingContainer <span class="token operator">=</span> <span class="token function">isInScrollingContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// For views inside a scrolling container, delay the pressed feedback for</span>    <span class="token comment">// a short period in case this is a scroll.</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>isInScrollingContainer<span class="token punctuation">)</span> <span class="token punctuation">{</span>        mPrivateFlags <span class="token operator">|=</span> <span class="token constant">PFLAG_PREPRESSED</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>mPendingCheckForTap <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            mPendingCheckForTap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CheckForTap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        mPendingCheckForTap<span class="token punctuation">.</span>x <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mPendingCheckForTap<span class="token punctuation">.</span>y <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">postDelayed</span><span class="token punctuation">(</span>mPendingCheckForTap<span class="token punctuation">,</span> <span class="token class-name">ViewConfiguration</span><span class="token punctuation">.</span><span class="token function">getTapTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token comment">// Not inside a scrolling container, so show the feedback right away</span>        <span class="token function">setPressed</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">checkForLongClick</span><span class="token punctuation">(</span>                <span class="token class-name">ViewConfiguration</span><span class="token punctuation">.</span><span class="token function">getLongPressTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                x<span class="token punctuation">,</span>                y<span class="token punctuation">,</span>                <span class="token constant">TOUCH_GESTURE_CLASSIFIED__CLASSIFICATION__LONG_PRESS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">break</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>ACTION_MOVE</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">case</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span><span class="token constant">ACTION_MOVE</span><span class="token operator">:</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>clickable<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">drawableHotspotChanged</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">final</span> <span class="token keyword">int</span> motionClassification <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getClassification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">final</span> <span class="token keyword">boolean</span> ambiguousGesture <span class="token operator">=</span>            motionClassification <span class="token operator">==</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span><span class="token constant">CLASSIFICATION_AMBIGUOUS_GESTURE</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> touchSlop <span class="token operator">=</span> mTouchSlop<span class="token punctuation">;</span><span class="token comment">//判断是否有监听长按的任务</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>ambiguousGesture <span class="token operator">&amp;&amp;</span> <span class="token function">hasPendingLongPressCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">pointInView</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> touchSlop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// The default action here is to cancel long press. But instead, we</span>            <span class="token comment">// just extend the timeout here, in case the classification</span>            <span class="token comment">// stays ambiguous.</span>            <span class="token comment">//取消长按</span>            <span class="token function">removeLongPressCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">long</span> delay <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">ViewConfiguration</span><span class="token punctuation">.</span><span class="token function">getLongPressTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token operator">*</span> mAmbiguousGestureMultiplier<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// Subtract the time already spent</span>            delay <span class="token operator">-=</span> event<span class="token punctuation">.</span><span class="token function">getEventTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> event<span class="token punctuation">.</span><span class="token function">getDownTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//检查delay时间后，是否会出现长按事件</span>            <span class="token function">checkForLongClick</span><span class="token punctuation">(</span>                    delay<span class="token punctuation">,</span>                    x<span class="token punctuation">,</span>                    y<span class="token punctuation">,</span>                    <span class="token constant">TOUCH_GESTURE_CLASSIFIED__CLASSIFICATION__LONG_PRESS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        touchSlop <span class="token operator">*=</span> mAmbiguousGestureMultiplier<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// Be lenient about moving outside of buttons</span><span class="token comment">// 如果触摸点移出了该view，则取消Tap和 长按 事件</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">pointInView</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> touchSlop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// Outside button</span>        <span class="token comment">// Remove any future long press/tap checks</span>        <span class="token function">removeTapCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">removeLongPressCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mPrivateFlags <span class="token operator">&amp;</span> <span class="token constant">PFLAG_PRESSED</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">setPressed</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        mPrivateFlags3 <span class="token operator">&amp;=</span> <span class="token operator">~</span><span class="token constant">PFLAG3_FINGER_DOWN</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">final</span> <span class="token keyword">boolean</span> deepPress <span class="token operator">=</span>            motionClassification <span class="token operator">==</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span><span class="token constant">CLASSIFICATION_DEEP_PRESS</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>deepPress <span class="token operator">&amp;&amp;</span> <span class="token function">hasPendingLongPressCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// process the long click action immediately</span>        <span class="token function">removeLongPressCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//立刻发送长按事件，执行OnLongClickListener</span>        <span class="token function">checkForLongClick</span><span class="token punctuation">(</span>                <span class="token number">0</span> <span class="token comment">/* send immediately */</span><span class="token punctuation">,</span>                x<span class="token punctuation">,</span>                y<span class="token punctuation">,</span>                <span class="token constant">TOUCH_GESTURE_CLASSIFIED__CLASSIFICATION__DEEP_PRESS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">break</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>ACTION_UP</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">case</span> <span class="token class-name">MotionEvent</span><span class="token punctuation">.</span><span class="token constant">ACTION_UP</span><span class="token operator">:</span>    mPrivateFlags3 <span class="token operator">&amp;=</span> <span class="token operator">~</span><span class="token constant">PFLAG3_FINGER_DOWN</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>viewFlags <span class="token operator">&amp;</span> <span class="token constant">TOOLTIP</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">TOOLTIP</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">handleTooltipUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>clickable<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//移除Tap和长按</span>        <span class="token function">removeTapCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">removeLongPressCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mInContextButtonPress <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        mHasPerformedLongPress <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        mIgnoreNextUpEvent <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">boolean</span> prepressed <span class="token operator">=</span> <span class="token punctuation">(</span>mPrivateFlags <span class="token operator">&amp;</span> <span class="token constant">PFLAG_PREPRESSED</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mPrivateFlags <span class="token operator">&amp;</span> <span class="token constant">PFLAG_PRESSED</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">||</span> prepressed<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// take focus if we don't have it already and we should in</span>        <span class="token comment">// touch mode.</span>        <span class="token keyword">boolean</span> focusTaken <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFocusable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isFocusableInTouchMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isFocused</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            focusTaken <span class="token operator">=</span> <span class="token function">requestFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>prepressed<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// The button is being released before we actually</span>            <span class="token comment">// showed it as pressed.  Make it show the pressed</span>            <span class="token comment">// state now (before scheduling the click) to ensure</span>            <span class="token comment">// the user sees it.</span>            <span class="token function">setPressed</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mHasPerformedLongPress <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mIgnoreNextUpEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// This is a tap, so remove the longpress check</span>            <span class="token function">removeLongPressCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// Only perform take click actions if we were in the pressed state</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>focusTaken<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">// Use a Runnable and post this rather than calling</span>                <span class="token comment">// performClick directly. This lets other visual state</span>                <span class="token comment">// of the view update before click actions start.</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>mPerformClick <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    mPerformClick <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PerformClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment">//把mPerformClick加入消息队列，PerformClick内部其实调用了performClickInternal</span>                <span class="token comment">//PerformClick执行run方法-&gt;performClickInternal-&gt;performClick</span>                <span class="token comment">//performClick调用OnClickListener: li.mOnClickListener.onClick(this)</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">post</span><span class="token punctuation">(</span>mPerformClick<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">performClickInternal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>mUnsetPressedState <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            mUnsetPressedState <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UnsetPressedState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>prepressed<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">postDelayed</span><span class="token punctuation">(</span>mUnsetPressedState<span class="token punctuation">,</span>                    <span class="token class-name">ViewConfiguration</span><span class="token punctuation">.</span><span class="token function">getPressedStateDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">post</span><span class="token punctuation">(</span>mUnsetPressedState<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// If the post failed, unpress right now</span>            mUnsetPressedState<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token function">removeTapCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    mIgnoreNextUpEvent <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">break</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> View </tag>
            
            <tag> 事件分发、处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>流式布局</title>
      <link href="/2023/05/18/liu-shi-bu-ju/"/>
      <url>/2023/05/18/liu-shi-bu-ju/</url>
      
        <content type="html"><![CDATA[<h1 id="FlowLayout"><a href="#FlowLayout" class="headerlink" title="FlowLayout"></a>FlowLayout</h1><hr><h2 id="支持属性"><a href="#支持属性" class="headerlink" title="支持属性"></a>支持属性</h2><ol><li>支持FlowLayout设置margin</li><li>支持FlowLayout设置padding</li><li>支持FlowLayout.children设置margin</li><li>考虑了FlowLayout在AT_MOST下的测量宽高</li></ol><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="/medias/articlesimg/FlowLayout.png" alt="FlowScreen"></p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><ol><li><p>LayoutInflater.generateLayoutParams(attrs: AttributeSet?)</p><p>提供MarginLayoutParams，使children的margin生效</p></li><li><p>onMeasure()</p><p>测量所有child，考虑FlowLayout本身的padding，以及child的margin</p></li><li><p>onLayout()</p><p>根据测量所得的参数进行子View的布局</p></li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">package</span> com<span class="token punctuation">.</span>guru<span class="token punctuation">.</span>composecookbook<span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context<span class="token keyword">import</span> android<span class="token punctuation">.</span>util<span class="token punctuation">.</span>AttributeSet<span class="token keyword">import</span> android<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Log<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>View<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>ViewGroup<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>view<span class="token punctuation">.</span>marginBottom<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>view<span class="token punctuation">.</span>marginLeft<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>view<span class="token punctuation">.</span>marginRight<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>view<span class="token punctuation">.</span>marginTop<span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Integer<span class="token punctuation">.</span>max<span class="token comment">/** * 1. onMeasure() *      --&gt; FlowLayout的padding, children的margin *      --&gt; SpecMode *          --&gt; EXACTLY *          --&gt; AtMost * 2. onLayout() *      --&gt; FlowLayout的padding, children的margin */</span><span class="token keyword">class</span> FlowLayout <span class="token annotation builtin">@JvmOverloads</span> <span class="token keyword">constructor</span><span class="token punctuation">(</span>    context<span class="token operator">:</span> Context<span class="token operator">?</span><span class="token punctuation">,</span>    attrs<span class="token operator">:</span> AttributeSet<span class="token operator">?</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>    defStyleAttr<span class="token operator">:</span> Int <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>    defStyleRes<span class="token operator">:</span> Int <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">ViewGroup</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> defStyleAttr<span class="token punctuation">,</span> defStyleRes<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> views<span class="token operator">:</span> MutableList<span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>View<span class="token operator">&gt;</span><span class="token operator">&gt;</span>    <span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> heights<span class="token operator">:</span> MutableList<span class="token operator">&lt;</span>Int<span class="token operator">&gt;</span>    <span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> lineViews<span class="token operator">:</span> MutableList<span class="token operator">&lt;</span>View<span class="token operator">&gt;</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">generateLayoutParams</span><span class="token punctuation">(</span>attrs<span class="token operator">:</span> AttributeSet<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> LayoutParams <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">MarginLayoutParams</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onMeasure</span><span class="token punctuation">(</span>widthMeasureSpec<span class="token operator">:</span> Int<span class="token punctuation">,</span> heightMeasureSpec<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">measureFlowChildren</span><span class="token punctuation">(</span>widthMeasureSpec<span class="token punctuation">,</span> heightMeasureSpec<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">measureFlowChildren</span><span class="token punctuation">(</span>widthMeasureSpec<span class="token operator">:</span> Int<span class="token punctuation">,</span> heightMeasureSpec<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token punctuation">{</span>        views <span class="token operator">=</span> <span class="token function">mutableListOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        heights <span class="token operator">=</span> <span class="token function">mutableListOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        lineViews <span class="token operator">=</span> <span class="token function">mutableListOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">//父项给到this的宽及Mode</span>        <span class="token keyword">val</span> widthSpecMode <span class="token operator">=</span> MeasureSpec<span class="token punctuation">.</span><span class="token function">getMode</span><span class="token punctuation">(</span>widthMeasureSpec<span class="token punctuation">)</span>        <span class="token keyword">val</span> widthSpecSize <span class="token operator">=</span> MeasureSpec<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span>widthMeasureSpec<span class="token punctuation">)</span>        <span class="token comment">//父项给到this的高及Mode</span>        <span class="token keyword">val</span> heightSpecMode <span class="token operator">=</span> MeasureSpec<span class="token punctuation">.</span><span class="token function">getMode</span><span class="token punctuation">(</span>heightMeasureSpec<span class="token punctuation">)</span>        <span class="token keyword">val</span> heightSpecSize <span class="token operator">=</span> MeasureSpec<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span>heightMeasureSpec<span class="token punctuation">)</span>        <span class="token comment">//测量宽高,this的总高，以及line的最大宽度</span>        <span class="token keyword">var</span> selfMaxWidth <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">var</span> selfHeight <span class="token operator">=</span> <span class="token number">0</span>        <span class="token comment">//当前行</span>        <span class="token keyword">var</span> curWidth <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">var</span> curHeight <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">val</span> update <span class="token operator">=</span> <span class="token punctuation">{</span>            views<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>lineViews<span class="token punctuation">)</span>            heights<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>curHeight<span class="token punctuation">)</span>            <span class="token comment">//更新this的宽高</span>            selfHeight <span class="token operator">+=</span> curHeight            selfMaxWidth <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>selfMaxWidth<span class="token punctuation">,</span> curWidth<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token punctuation">(</span><span class="token number">0</span> until childCount<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span> <span class="token punctuation">{</span> index <span class="token operator">-&gt;</span>            <span class="token comment">//先测量child</span>            <span class="token keyword">val</span> child <span class="token operator">=</span> <span class="token function">getChildAt</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>            child<span class="token punctuation">.</span><span class="token function">measure</span><span class="token punctuation">(</span>widthSpecSize<span class="token punctuation">,</span> heightSpecSize<span class="token punctuation">)</span>            <span class="token keyword">val</span> layoutParams <span class="token operator">=</span> child<span class="token punctuation">.</span>layoutParams <span class="token keyword">as</span> MarginLayoutParams            Log<span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span>                <span class="token string-literal singleline"><span class="token string">"child"</span></span><span class="token punctuation">,</span>                <span class="token string-literal singleline"><span class="token string">"child{marginLeft:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token expression">child<span class="token punctuation">.</span>marginLeft</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,marginTop:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token expression">child<span class="token punctuation">.</span>marginTop</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,marginRight:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token expression">child<span class="token punctuation">.</span>marginRight</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,marginBottom:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token expression">child<span class="token punctuation">.</span>marginBottom</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}, layoutParams.marginStart = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token expression">layoutParams<span class="token punctuation">.</span>marginStart</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">"</span></span>            <span class="token punctuation">)</span>            <span class="token comment">//拿到child的测量宽高</span>            <span class="token keyword">val</span> innerLineWidth <span class="token operator">=</span> curWidth <span class="token operator">+</span> child<span class="token punctuation">.</span>measuredWidth <span class="token operator">+</span> child<span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">val</span> lineWidth <span class="token operator">=</span> innerLineWidth <span class="token operator">+</span> paddingLeft <span class="token operator">+</span> paddingRight            <span class="token keyword">if</span> <span class="token punctuation">(</span>lineWidth <span class="token operator">&gt;</span> widthSpecSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment">//重置</span>                lineViews <span class="token operator">=</span> <span class="token function">mutableListOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                curWidth <span class="token operator">=</span> <span class="token number">0</span>                curHeight <span class="token operator">=</span> <span class="token number">0</span>            <span class="token punctuation">}</span>            <span class="token comment">//当前 child 的尺寸大于 widthSpecSize</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span>measuredWidth <span class="token operator">+</span> child<span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> horizontalPadding <span class="token operator">&gt;</span> widthSpecSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>                views<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">listOf</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">val</span> viewHeight <span class="token operator">=</span> child<span class="token punctuation">.</span>measuredHeight <span class="token operator">+</span> child<span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>                heights<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>viewHeight<span class="token punctuation">)</span>                <span class="token comment">//更新this的宽高</span>                selfHeight <span class="token operator">+=</span> viewHeight                selfMaxWidth <span class="token operator">=</span> widthSpecSize            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                curWidth <span class="token operator">+=</span> child<span class="token punctuation">.</span>measuredWidth <span class="token operator">+</span> child<span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                curHeight <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>curHeight<span class="token punctuation">,</span> child<span class="token punctuation">.</span>measuredHeight <span class="token operator">+</span> child<span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                lineViews<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>lineViews<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">var</span> width <span class="token operator">=</span> selfMaxWidth        <span class="token keyword">var</span> height <span class="token operator">=</span> selfHeight        <span class="token keyword">if</span> <span class="token punctuation">(</span>widthSpecMode <span class="token operator">==</span> MeasureSpec<span class="token punctuation">.</span>EXACTLY<span class="token punctuation">)</span> <span class="token punctuation">{</span>            width <span class="token operator">=</span> widthSpecSize        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>heightSpecMode <span class="token operator">==</span> MeasureSpec<span class="token punctuation">.</span>EXACTLY<span class="token punctuation">)</span> <span class="token punctuation">{</span>            height <span class="token operator">=</span> heightSpecSize        <span class="token punctuation">}</span>        Log<span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span>            DEBUG<span class="token punctuation">,</span>            <span class="token string-literal singleline"><span class="token string">"MeasureSpec{widthSpecSize = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">widthSpecSize</span></span><span class="token string">, heightSpecSize = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">heightSpecSize</span></span><span class="token string">}"</span></span>        <span class="token punctuation">)</span>        Log<span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span>DEBUG<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">"FlowLayout{width = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">width</span></span><span class="token string">, height = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">height</span></span><span class="token string">}"</span></span><span class="token punctuation">)</span>        <span class="token function">setMeasuredDimension</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 以下四个参数是this相对于this.parent的     * @param l     * @param t     * @param r     * @param b     */</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onLayout</span><span class="token punctuation">(</span>changed<span class="token operator">:</span> Boolean<span class="token punctuation">,</span> l<span class="token operator">:</span> Int<span class="token punctuation">,</span> t<span class="token operator">:</span> Int<span class="token punctuation">,</span> r<span class="token operator">:</span> Int<span class="token punctuation">,</span> b<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">measureChildrenLayout</span><span class="token punctuation">(</span>changed<span class="token punctuation">,</span> l<span class="token punctuation">,</span> t<span class="token punctuation">,</span> r<span class="token punctuation">,</span> b<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">measureChildrenLayout</span><span class="token punctuation">(</span>        changed<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>        left<span class="token operator">:</span> Int<span class="token punctuation">,</span>        top<span class="token operator">:</span> Int<span class="token punctuation">,</span>        right<span class="token operator">:</span> Int<span class="token punctuation">,</span>        bottom<span class="token operator">:</span> Int    <span class="token punctuation">)</span> <span class="token punctuation">{</span>        Log<span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span>DEBUG<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">"left=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">left</span></span><span class="token string">, top=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">top</span></span><span class="token string">, right=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">right</span></span><span class="token string">, bottom=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">bottom</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token keyword">var</span> curY <span class="token operator">=</span> paddingTop        views<span class="token punctuation">.</span><span class="token function">forEachIndexed</span> <span class="token punctuation">{</span> index<span class="token punctuation">,</span> line <span class="token operator">-&gt;</span>            <span class="token keyword">var</span> curX <span class="token operator">=</span> paddingLeft            line<span class="token punctuation">.</span><span class="token function">forEach</span> <span class="token punctuation">{</span> lineChild <span class="token operator">-&gt;</span>                <span class="token keyword">val</span> l <span class="token operator">=</span> curX <span class="token operator">+</span> lineChild<span class="token punctuation">.</span>marginLeft                <span class="token keyword">val</span> t <span class="token operator">=</span> curY <span class="token operator">+</span> lineChild<span class="token punctuation">.</span>marginTop                <span class="token keyword">var</span> r <span class="token operator">=</span> curX <span class="token operator">+</span> lineChild<span class="token punctuation">.</span>measuredWidth <span class="token operator">+</span> lineChild<span class="token punctuation">.</span>marginLeft                <span class="token keyword">val</span> b <span class="token operator">=</span> curY <span class="token operator">+</span> lineChild<span class="token punctuation">.</span>measuredHeight <span class="token operator">+</span> lineChild<span class="token punctuation">.</span>marginTop                <span class="token keyword">if</span> <span class="token punctuation">(</span>lineChild<span class="token punctuation">.</span>measuredWidth <span class="token operator">+</span> lineChild<span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> horizontalPadding <span class="token operator">&gt;</span> measuredWidth<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    r <span class="token operator">=</span> measuredWidth <span class="token operator">-</span> paddingLeft <span class="token operator">-</span> lineChild<span class="token punctuation">.</span>marginLeft                <span class="token punctuation">}</span>                lineChild<span class="token punctuation">.</span><span class="token function">layout</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> t<span class="token punctuation">,</span> r<span class="token punctuation">,</span> b<span class="token punctuation">)</span>                curX <span class="token operator">+=</span> lineChild<span class="token punctuation">.</span>measuredWidth <span class="token operator">+</span> lineChild<span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>            curY <span class="token operator">+=</span> heights<span class="token punctuation">[</span>index<span class="token punctuation">]</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">fun</span> View<span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span>isVertical<span class="token operator">:</span> Boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token operator">:</span> Int <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>isVertical<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>marginTop <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>marginBottom        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>marginLeft <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>marginRight        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">inline</span> <span class="token keyword">val</span> ViewGroup<span class="token punctuation">.</span>horizontalPadding<span class="token operator">:</span> Int <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> paddingLeft <span class="token operator">+</span> paddingRight    <span class="token keyword">companion</span> <span class="token keyword">object</span> <span class="token punctuation">{</span>        <span class="token keyword">const</span> <span class="token keyword">val</span> DEBUG <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">"cgf"</span></span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Kotlin </tag>
            
            <tag> View </tag>
            
            <tag> 自定义布局 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Baseline</title>
      <link href="/2023/05/17/baseline/"/>
      <url>/2023/05/17/baseline/</url>
      
        <content type="html"><![CDATA[<h1 id="Baseline-图解"><a href="#Baseline-图解" class="headerlink" title="Baseline 图解"></a>Baseline 图解</h1><p><img src="/medias/articlesimg/baseline.png" alt="Baseline"></p><h2 id="FontMetricInt"><a href="#FontMetricInt" class="headerlink" title="FontMetricInt"></a>FontMetricInt</h2><ul><li>FontMetricInt.top：Font的顶部界限，实际不可能达到，为<strong>负值</strong></li><li>FontMetricInt.bottom：Font的底部界限，实际不可能达到，为<strong>正值</strong></li><li>FontMetricInt.ascent：Font的top界限，最大值</li><li>FontMetricInt.descent：Font的bottom界限，最大值</li></ul><h2 id="Baseline"><a href="#Baseline" class="headerlink" title="Baseline"></a>Baseline</h2><p>text绘制的基线</p><h2 id="metricX、metricY"><a href="#metricX、metricY" class="headerlink" title="metricX、metricY"></a>metricX、metricY</h2><p>相对于Baseline的坐标轴</p><h1 id="代码计算Baseline"><a href="#代码计算Baseline" class="headerlink" title="代码计算Baseline"></a>代码计算Baseline</h1><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//获取x坐标</span><span class="token comment">//使文字在控件内的x方向居中</span><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span>bounds<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">//获取基线Baseline</span><span class="token comment">//mPaint为定义的任何Paint对象</span><span class="token class-name">Paint<span class="token punctuation">.</span>FontMetricsInt</span> metrics <span class="token operator">=</span> mPaint<span class="token punctuation">.</span><span class="token function">getFontMetricsInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> offY <span class="token operator">=</span> <span class="token punctuation">(</span>metrics<span class="token punctuation">.</span>bottom <span class="token operator">-</span> metrics<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> metrics<span class="token punctuation">.</span>bottom<span class="token punctuation">;</span><span class="token comment">//Baseline</span><span class="token keyword">int</span> baseline <span class="token operator">=</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> offY<span class="token punctuation">;</span><span class="token comment">//则绘制text的坐标为(x, baseline)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="图解"><a href="#图解" class="headerlink" title="图解"></a>图解</h2><p><img src="/medias/articlesimg/offY.png" alt="offY"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 用控件高度的一半再加上offY，有垂直居中效果</span><span class="token keyword">int</span> baseline <span class="token operator">=</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> offY<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试文章</title>
      <link href="/2023/04/23/ce-shi-wen-zhang/"/>
      <url>/2023/04/23/ce-shi-wen-zhang/</url>
      
        <content type="html"><![CDATA[<h2 id="markdown-emoj"><a href="#markdown-emoj" class="headerlink" title="markdown emoj"></a>markdown emoj</h2><p><span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><p><span class="github-emoji"><span>😃</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><p><span class="github-emoji"><span>😠</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f620.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><p><span class="github-emoji"><span>🍉</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f349.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>创建&amp;发布文章</title>
      <link href="/2023/04/22/hello-world/"/>
      <url>/2023/04/22/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new post <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Clean"><a href="#Clean" class="headerlink" title="Clean"></a>Clean</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate或$ hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy或$ hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Local-Run-server"><a href="#Local-Run-server" class="headerlink" title="Local Run server"></a>Local Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typpora </tag>
            
            <tag> Markdown </tag>
            
            <tag> Kotlin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创建文章选项详解</title>
      <link href="/2023/04/22/chuang-jian-wen-zhang-xuan-xiang-xiang-jie/"/>
      <url>/2023/04/22/chuang-jian-wen-zhang-xuan-xiang-xiang-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>hide</td><td><code>false</code></td><td>隐藏文章，如果<code>hide</code>值为<code>true</code>，则文章不会在首页显示</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 赵奇<span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">hide</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /images/1.jpg<span class="token key atrule">password</span><span class="token punctuation">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92<span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">categories</span><span class="token punctuation">:</span> Markdown<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Typora  <span class="token punctuation">-</span> Markdown<span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typpora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
